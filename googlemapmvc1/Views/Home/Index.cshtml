
@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width",initial-scale="1" />
    <title>Index</title>
    <script>L_PREFER_CANVAS = true;</script>

    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.0.3/dist/leaflet.css" />
    <link rel="stylesheet" href="~/Content/MarkerCluster.css" />
    <link rel="stylesheet" href="~/Content/MarkerCluster.Default.css"/>

    <script src="~/Scripts/jquery-2.2.3.min.js"></script>
    <script src="https://unpkg.com/leaflet@1.0.3/dist/leaflet.js"></script>
   
    <script src="~/Scripts/leaflet.markercluster.js"></script>
    
    <script src="~/Scripts/bootstrap.min.js"></script>
    <script src="~/Scripts/moment.js"></script>
    <script src="~/Scripts/chart.js"></script>
    <link href="https://fonts.googleapis.com/css?family=Open+Sans" rel="stylesheet">
    <style>
        
  #mapid {
      height : 525px ;width : 800px; position : absolute;
      left : 230px;top: 65px; }
    
         
   body {           
        
    background-color:#0000FF}

    #date-info {position : absolute; top : 65px;left : 50px ;
              border : 1px;border-style : solid; border-color : black;
              height : 150px; width : 170px; border-radius : 10px;
              font-family: 'Open Sans', sans-serif;
              font-size : 12px;
              padding : 6px 1px;background-color:white;
             
        
           
    }


    #date-info-content {overflow : auto;border-radius :8px;
                        height : 150px; width : 170px; 



    }
   

    #datetitle{ font-family: 'Open Sans', sans-serif;
              font-size : 11px;
              background-color:white;
           
    }


    #dateselect { font-family: 'Open Sans', sans-serif;
              font-size : 11px;
              padding : 0px;background-color:white;
              margin : 0px;
    }

  #dateselector {
            position: absolute;
            top: 245px;
            left: 50px;
            border: 1px;
            border-style: solid;
            border-color: black;
            height: 100px;
            width: 150px;
            border-radius: 10px;
            padding: 10px;
            background-color: white;
            font-family: 'Open Sans', sans-serif;
            font-size: 11px;
        }



    

     #statistic {position : absolute; top : 375px;left : 50px ;
              border : 1px;border-style : solid; border-color : black;
              height : 20px; width : 150px; border-radius : 10px;padding : 10px;background-color :white;
               font-family: 'Open Sans', sans-serif;
              font-size : 11px; 

    }

    #infotext{position : absolute; top : 420px;left : 50px ;
              border : 1px;border-style : solid; border-color : black;
              height : 150px; width : 150px; border-radius : 10px;
              font-family: 'Open Sans', sans-serif;
              font-size : 11px;
              padding : 10px;background-color:white;
    }

    #chart {position : absolute; top : 65px;left : 1035px ;
              border : 1px;border-style : solid; border-color : black;
              height : 300px; width : 280px; border-radius : 10px;
              font-family: 'Open Sans', sans-serif;
              font-size : 11px;
              padding : 10px;background-color:white;
    }
    select { border-radius : 10px}
   
   
          
   
    
    </style>
</head>
<body>
    <ul>
       <li><img src="http://www.q2c.be/Content/Images/q2c-logo-neg.png" alt="test" style="width : 62px; height: 20px;"></li>
    </ul>


 

   <div id="mapid"></div>


   
    <div id="date-info" >
        <div id="date-info-content">
            <h1 id="datetitle">Scan days</h1>
            <ul id="dates-list"></ul>
        </div>
    </div>

    <div id=dateselector>
        <select name="dateselect" id="dateselect">
            <option value="">Select dates</option>
            <option value="">All dates</option>
        </select>


    </div>



   <div id="statistic"></div>

   <div id="infotext"></div>

    <div id="chart">
        <canvas id="mychart" width="400" height="400"></canvas>

    </div> 
                   
        
    
   

    <script type="text/javascript">


        var markers = @Html.Raw(ViewBag.Jsonlist);
        var patrollers =@Html.Raw(ViewBag.Patrollistjson);
        var days = @Html.Raw(ViewBag.Daysjson);
        var dayschron = days.reverse();
        var colors = ["red","blue","yellow","green","orange"];
      
        var gmarkers = [];
        var vmarkers=[];
        var dateselect = document.getElementById("dateselect");
        var dateselected = dateselect.value;
           

       
        //data for dateselector
                     
            document.getElementById("datetitle").innerHTML="number of scandays:  " + dayschron.length;
        
            for (i=0;i<dayschron.length;i++) {

                var dayformatted = moment(dayschron[i]).format("DD/MM/YYYY");
                var datenode = document.createElement("li");
                var datetext = document.createTextNode( dayformatted);
                datenode.appendChild(datetext);
                document.getElementById("dates-list").appendChild(datenode);
            

            };
            

            for (i=0;i<dayschron.length;i++) {
                var dayformat1 = moment(dayschron[i]).format("DD/MM/YYYY");
                console.log(dayformat1)
                $("#dateselect").append("<option value=" + dayformat1 +">" +  dayformat1 + "</option>")

            };
                

            //$('#dateselect').on('change',function() {

            //    dateselected = this.value;
            //    vmarkers=[];

            //    for (i=0; i<markers.length; i++) {

            //        marker = gmarkers[i];
                    
                   
            //        if(marker.category == dateselected  || dateselected.length == 0  ) {
            //            marker.setVisible(true);
            //            vmarkers.push(marker);
            //        }

            //                    else{ marker.setVisible(false);
            //                    }
            //    }

            //    showVisibleMarkers(vmarkers);
            //    markerCluster.clearMarkers();
            //    markerCluster.addMarkers(vmarkers);
                
            //            })
        
           
       
        //make map and add marker 
            function makemap()

            {
           

                var map = L.map('mapid').setView([51.20858, 3.227961], 14);

                var osmUrl='http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png';
                var osmAttrib='Map data © <a href="http://openstreetmap.org">OpenStreetMap</a> contributors';
                var osm = new L.TileLayer(osmUrl, {minZoom: 8, maxZoom: 20, attribution: osmAttrib,subdomains:['a','b','c']});
                map.addLayer(osm);
           
                       
                     

                for (i = 0; i < markers.length; i++) {
                    addMarker(markers[i]);}
                       
                       
              
                  

                
                function addMarker(marker) {

                   
                    var pos = [marker.HTQU_Latitude,marker.HTQU_Longitude];


                    var datetimestring = moment(marker.HTQU_CreatedOn).format("MMMM Do YYYY, h:mm:ss a");

                    var title = datetimestring;
           
            
                    L.marker(pos).addTo(map)
                                .bindPopup(category)
                                .openPopup()
                                .on('click',function(e){

                                    var posstring = String(pos);
                                    document.getElementById("infotext").innerHTML="<b>Data selected marker</b><br><br><u>Date and time : </u><br>"
                                   + title + "<br><br> <u>Coordinates : </u><br>" + posstring.match(/[^()]+/)

                                });
           
                          
           

                    gmarkers.push(marker);
                }
            }
        //    function showVisibleMarkers(fmarkers) {

        //        map.on('moveend',function() {
        //            var bounds = map.getBounds();
        //            count = 0;

        //            for (var i=0; i< fmarkers.length;i++) {

        //                var marker = fmarkers[i];
        //                if(bounds.contains(marker.getLatLng())===true) 
        //                    count++

        //            }

        //        });
                                   
        //        $("#statistic").html(count + " reads in actual zoom");
        //    }

        

            makemap();
       
        //    showVisibleMarkers(gmarkers);

     
          
       
            //code for chart
            var countday = []
            var daysformatted=[];


            for (i=0;i<dayschron.length;i++) { 
            
                var counter = 0;
                var datescan = moment(dayschron[i]).format("DD/MM/YYYY");
                daysformatted.push(datescan);
           
                for (j=0; j<markers.length; j++) {

                    marker = gmarkers[j];
                                    
                    if(moment(marker.HTQU_CreatedOn).format("DD/MM/YYYY") == datescan) { counter=counter+1}

                }
                countday.push(counter);

            };


            var ctx = document.getElementById("mychart");
            var myChart = new Chart
            (ctx, {
                type: 'bar',
                data: {
                    labels:daysformatted,
                    datasets: [{
                        label: '# of Reads',
                        data: countday,
                        backgroundColor: [
                            'rgba(255, 99, 132, 0.2)',
                            'rgba(54, 162, 235, 0.2)',
                            'rgba(255, 206, 86, 0.2)',
                            'rgba(75, 192, 192, 0.2)',
                            'rgba(153, 102, 255, 0.2)',
                            'rgba(255, 159, 64, 0.2)',
                            'rgba(255, 99, 132, 0.2)',
                            'rgba(54, 162, 235, 0.2)',
                            'rgba(255, 206, 86, 0.2)',
                            'rgba(75, 192, 192, 0.2)',
                            'rgba(153, 102, 255, 0.2)',
                            'rgba(255, 99, 132, 0.2)',
                            'rgba(54, 162, 235, 0.2)',
                            'rgba(255, 206, 86, 0.2)',
                            'rgba(75, 192, 192, 0.2)',
                            'rgba(153, 102, 255, 0.2)',
                            'rgba(255, 159, 64, 0.2)',
                            'rgba(255, 99, 132, 0.2)',
                            'rgba(54, 162, 235, 0.2)',
                            'rgba(255, 206, 86, 0.2)',
                            'rgba(75, 192, 192, 0.2)',
                            'rgba(153, 102, 255, 0.2)',
                        ],
                        borderColor: [
                            'rgba(255,99,132,1)',
                            'rgba(54, 162, 235, 1)',
                            'rgba(255, 206, 86, 1)',
                            'rgba(75, 192, 192, 1)',
                            'rgba(153, 102, 255, 1)',
                            'rgba(255, 159, 64, 1)',
                            'rgba(255,99,132,1)',
                            'rgba(54, 162, 235, 1)',
                            'rgba(255, 206, 86, 1)',
                            'rgba(75, 192, 192, 1)',
                            'rgba(153, 102, 255, 1)',
                            'rgba(255,99,132,1)',
                            'rgba(54, 162, 235, 1)',
                            'rgba(255, 206, 86, 1)',
                            'rgba(75, 192, 192, 1)',
                            'rgba(153, 102, 255, 1)',
                            'rgba(255, 159, 64, 1)',
                            'rgba(255,99,132,1)',
                            'rgba(54, 162, 235, 1)',
                            'rgba(255, 206, 86, 1)',
                            'rgba(75, 192, 192, 1)',
                            'rgba(153, 102, 255, 1)',
                        ],
                        borderWidth: 1
                    }]
                },
                options:{
                    scales: {
                        yAxes: [{
                            ticks: {
                                beginAtZero:true
                            }
                        }]
                            
                    }          
                }


            })


         </script>
</body>
</html>

    
