
@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <script src="~/Scripts/jquery-2.2.3.min.js"></script>
    <script src="~/Scripts/moment.min.js"></script>

    <link rel="stylesheet" href="~/Content/bootstrap.css" />

    <link rel="stylesheet" href="~/Content/daterangepicker.css" />
    <script src="~/Scripts/daterangepicker.js"></script>
    <script src="~/Scripts/chart.js"></script>

    <link href="https://fonts.googleapis.com/css?family=Open+Sans" rel="stylesheet">
    <script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDe1iRGmDMXSwy0py_TRHruCp49TO0eyuU"></script>
    <script src="https://developers.google.com/maps/documentation/javascript/examples/markerclusterer/markerclusterer.js"></script>

    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width",initial-scale="1" />
    <title>Index</title>

    <style>
        
 body{background-color : #024282;margin : 5px;padding : 5px }
    
   #mynav {background-color:#012d46;
           border-color : #012d46
   }      
  
   img {margin-top : 10px}

   input {width : 150px}

   #monthyearselector {
              border : 1px;border-style : solid; border-color : black;
              height : 100px;  border-radius : 10px;
              font-family: 'Open Sans', sans-serif;
              font-size : 12px;
              padding : 6px; background-color:#F2F6F7;


   }


   #rangepicker {
      
              background-color : #024282;
              height : 40px; border-radius : 10px;
              font-family: 'Open Sans', sans-serif;
              font-size : 12px;
              padding : 6px 1px;
              margin-left : 30px



   }


    
    select { border-radius : 10px; font-family: 'Open Sans', sans-serif;
              font-size : 12px;
              padding : 6px 1px;background-color:#F2F6F7

    }
   
  #piechartcontrol {
              border : 1px;border-style : solid; border-color : black;
              height : 250px;  border-radius : 10px;
              font-family: 'Open Sans', sans-serif;
              font-size : 11px;
              padding : 10px;background-color:#F2F6F7

    }


  #tablecontrol {
              border : 1px;border-style : solid; border-color : black;
              height : 200px;  border-radius : 10px;
              font-family: 'Open Sans', sans-serif;
              font-size : 11px;
              padding : 10px;background-color:#F2F6F7



    }

  #tablehits {border : 1px;border-style : solid; border-color : black;
              height : 200px;  border-radius : 10px;
              font-family: 'Open Sans', sans-serif;
              font-size : 11px;
              padding : 10px;background-color:#F2F6F7


  }


  #piecharthits {
              border : 2px;border-style : solid; border-color : black;
              height : 250px; border-radius : 10px;
              font-family: 'Open Sans', sans-serif;
              font-size : 11px;
              padding : 10px;background-color:#F2F6F7;


    }
   
     p {font-family: 'Open Sans', sans-serif;
              font-size : 11px;
              padding : 10px;background-color:#F2F6F7;}  
     
     table,th,td {  border : 1px;border-style : solid; border-color : black;
              border-radius : 2px;


     }   

     
   
    
    </style>
</head>
<body>
    <nav class="navbar navbar-default" id="mynav">
        <div class="container-fluid">
            
            <ul>
                <li><img src="http://www.q2c.be/Content/Images/q2c-logo-neg.png" alt="test" style="width : 62px; height: 20px;"></li>
            </ul>
        </div>

    </nav>

    @*<div class="row">
        <div id="rangepicker">
            <input type="text" name="daterange"  value="01/01/2015 1:30 PM - 01/01/2015 2:00 PM" />


        </div>

    </div>*@




    <div class="row">


        <div class="col-sm-4">
            <div id="monthyearselector">
                <p>Kies periode voor data analyse </p>
                <select name="monthyearselect" id="monthyearselect">
                    <option value="">up to now</option>

                </select>
            </div>
        </div>

        <div class="col-sm-4">
            <div id="piechartcontrol">
                <canvas id="piechartcanvascontrol"></canvas>
            </div>
        </div>


            <div class="col-sm-4">
                <div id="piecharthits">
                    <canvas id="piechartcanvashits"></canvas>
                </div>
            </div>



        </div>


    <div class="row">
        <div class="col-sm-4"></div>
        <div class="col-sm-4">
            <div id="tablecontrol">
                <table id="controltable">
                    <tr>
                        <th>Type scan</th>
                        <th> Aantal</th>
                        <th>percentage</th>

                    </tr>

                </table>

            </div>
        </div>
        <div class="col-sm-4">
            <div id="tablehits">
                <table id="hittable">
                    <tr>
                        <th>Type hits</th>
                        <th> Aantal</th>
                        <th>percentage</th>

                    </tr>

                </table>

            </div>
        </div>
       
    </div>

   
    <script type="text/javascript">



$(function() {
    $('input[name="daterange"]').daterangepicker({
        timePicker: true,
        timePickerIncrement: 30,
        locale: {
            format: 'MM/DD/YYYY'
        }
    });
});
   



        var markers = @Html.Raw(ViewBag.Jsonlist);
        var patrollers =@Html.Raw(ViewBag.Patrollistjson);
        var days = @Html.Raw(ViewBag.Daysjson);
        var dayschron = days.reverse();

        //data for chart type of scans
        var listlphsids = @Html.Raw(ViewBag.Statlistjson);
        
        var lphsdays =  @Html.Raw(ViewBag.Lphsdaysjson);
        var lphsdayschron = lphsdays.reverse();
        var typecontrols = @Html.Raw(ViewBag.Typecontrolsjson);
        //

        var hits = @Html.Raw(ViewBag.Hitsjson);
        var hittypes = @Html.Raw(ViewBag.Hittypesjson);

        var colors = ["red","blue","yellow","green","orange"];
        var gmarkers = [];
        var vmarkers=[];



        var dicttypecontrol = {

        0 :'Parking Monitor',1 :'Uurrooster', 2: 'SMS', 3: 'Abonnement',
			5: 'Tweede RB',7: 'Bevroren Nummerplaat', 20: 'Sensibilisering', 100: 'YellowBrick', 110: 'PayByPhone',
			120: 'Parkeon', 130: 'Mobigo', 140: 'Presto', 150: 'MobileFor', 160: 'ParkMobile', 170: 'Extenso',
			180: 'CEVI', 190: 'Hectronic', 200: 'Parkare', 999: 'TOTAAL'

        }



        monthyear = [];

        //data for monthselector
        for (i=0;i<listlphsids.length;i++) {
            var monthyearformat1 = moment(listlphsids[i].LPHS_CreatedOn).format("MM/YYYY");
            monthyear.push(monthyearformat1);
        };

        monthyear_dist = GetUnique(monthyear);


        // function to get unique values from array
        function GetUnique(inputArray)
        {
            var outputArray = [];

            for (var i = 0; i < inputArray.length; i++)
            {
                if ((jQuery.inArray(inputArray[i], outputArray)) == -1)
                {
                    outputArray.push(inputArray[i]);
                }
            }

            return outputArray;
        };


        //select values for monthyearselector
        for (i=0;i<monthyear_dist.length;i++) {


            $("#monthyearselect").append("<option value=" + monthyear_dist[i] +">" + monthyear_dist[i]  + "</option>")

        };



        var tablescantype = document.getElementById("controltable");
        var tablehittype = document.getElementById("hittable");

        //code for piechart type control when page firstloaded
        var counttypecontrol =[];
        var labelsoftypecontrols =[];

        for (i=0;i<typecontrols.length;i++) {

            var check = typecontrols[i];
            var label = dicttypecontrol[check];
            var counter=0;
            for (j=0;j<listlphsids.length;j++){
                if (listlphsids[j].LHDT_TypeControle==check ) {

                    counter= counter+1}

            }
            var typeperc = ((counter/listlphsids.length)*100).toFixed(2);
            counttypecontrol.push(typeperc);
            labelsoftypecontrols.push(label);

            //code table type controle
            var row = tablescantype.insertRow(i+1);
            var cell1 = row.insertCell(0);
            var cell2 = row.insertCell(1);
            var cell3 = row.insertCell(2);
            cell1.innerHTML = label;
            cell2.innerHTML = counter;
            cell3.innerHTML = typeperc;



        };
        var rowtotal = tablescantype.insertRow(typecontrols.length+1);
        var celltotal1 = rowtotal.insertCell(0);
        var celltotal2= rowtotal.insertCell(1);
        var celltotal3=rowtotal.insertCell(2);
       
        celltotal1.innerHTML="Totaal";
        celltotal2.innerHTML= listlphsids.length; 
        celltotal3.innerHTML="100%";

      
        var canvas = document.getElementById("piechartcanvascontrol")
        var ctx = canvas.getContext("2d");


        var mypieChart = new Chart (ctx, {
            type : 'pie',
            data : {
                labels :labelsoftypecontrols,
                datasets : [{
                    backgroundColor: [
                    "#2ecc71",
                    "#3498db",
                    "#95a5a6",
                    "#9b59b6",
                    "#f1c40f",
                    "#e74c3c",
                    "#34495e"
                    ],
                    label : "percentage",
                    data : counttypecontrol
                }]
            },options : { responsive :true,maintainAspectRatio : false,
                title : {display : true, text : "ratio type control " ,padding : 2},legend :{labels :{ boxWidth: 20}},
                tooltips :{ callbacks: {
                    label: function(tooltipItem, data) {
                        var allData = data.datasets[tooltipItem.datasetIndex].data;
                        var tooltipLabel = data.labels[tooltipItem.index];
                        var tooltipData = allData[tooltipItem.index];

                        return tooltipLabel + ': ' + tooltipData +  '%';
                    }
                }}


            }}) ;

        //code for piechart hits type when first loaded
        var dicttypehits = {
            0 :'ongewerkte hit',1 :'geannuleerde hit', 2: 'gevalideerde hit', 4: 'Duplicate hit'

        };


       
        var counttypehit =[];
        var labelsoftypehit =[];

        for (i=0;i<hittypes.length;i++) {

            var checkhit = hittypes[i];
            var labelhit = dicttypehits[checkhit];
            var counterhit=0;
            for (j=0;j<hits.length;j++){
                if (hits[j].typehit==checkhit ) {

                    counterhit= counterhit+1}

            }
            var hittypeperc = ((counterhit/hits.length)*100).toFixed(2);
            counttypehit.push(hittypeperc);
            labelsoftypehit.push(labelhit);
            var rowhit = tablehittype.insertRow(i+1);
            var cella = rowhit.insertCell(0);
            var cellb = rowhit.insertCell(1);
            var cellc = rowhit.insertCell(2);
            cella.innerHTML = labelhit;
            cellb.innerHTML = counterhit;
            cellc.innerHTML = hittypeperc;


        };
        var rowtotalhit = tablehittype.insertRow(hittypes.length+1);
        var celltotalhit1 = rowtotalhit.insertCell(0);
        var celltotalhit2= rowtotalhit.insertCell(1);
        var celltotalhit3=rowtotalhit.insertCell(2);
       
        celltotalhit1.innerHTML="Totaal";
        celltotalhit2.innerHTML= hits.length; 
        celltotalhit3.innerHTML="100%";


        var canvas = document.getElementById("piechartcanvashits")
        var ctx = canvas.getContext("2d");


        var mypieChart = new Chart (ctx, {
            type : 'pie',
            data : {
                labels :labelsoftypehit,
                datasets : [{
                    backgroundColor: [
                    "#2ecc71",
                    "#3498db",
                    "#95a5a6",
                    "#9b59b6",
                    "#f1c40f",
                    "#e74c3c",
                    "#34495e"
                    ],
                    label : "percentage",
                    data : counttypehit
                }]
            },options : { responsive :true,maintainAspectRatio : false,
                title : {display : true, text : "ratio type hits",padding : 2},legend :{labels :{ boxWidth: 20}},
                tooltips :{ callbacks: {
                    label: function(tooltipItem, data) {
                        var allData = data.datasets[tooltipItem.datasetIndex].data;
                        var tooltipLabel = data.labels[tooltipItem.index];
                        var tooltipData = allData[tooltipItem.index];

                        return tooltipLabel + ': ' + tooltipData +  '%';
                    }
                }}


            }}) ;

        





      


        var listlphsidsselect =[];
        var hitselect =[];


        //function for monthyearselector
        $('#monthyearselect').on('change',function() {

            monthyearselect = this.value;

            
            listlphsidsselect.length=0;
            hitselect.length=0;
            //remove all rows except th from table with ratio type control
            var rowCount=tablescantype.rows.length;
            for (var x=rowCount-1;x>0;x--) {
                tablescantype.deleteRow(x);
            }
            //remove all rows except th from table with ratio type hits
            var rowCounthits = tablehittype.rows.length;
            for (var x=rowCounthits-1;x>0;x--){

                tablehittype.deleteRow(x);
            }




            //monthyear filter for type control
            for (i=0; i<listlphsids.length; i++) {


                if( (moment(listlphsids[i].LPHS_CreatedOn).format("MM/YYYY")== monthyearselect)
                    || (monthyearselect.length==0)


                    )  {

                    listlphsidsselect.push(listlphsids[i])

                }




            };
           


            // monthyear filter for hits
            for (i=0; i<hits.length; i++) {


                if( (moment(hits[i].HTQU_CreatedOn).format("MM/YYYY")== monthyearselect)
                    || (monthyearselect.length==0)


                    )  {

                    hitselect.push(hits[i])

                }




            };










            //code calculate data for piechart typecontrols (e.g. PM, abonnement,...)

            var counttypecontrol =[];
            var labelsoftypecontrols =[];

            for (i=0;i<typecontrols.length;i++) {

                var check = typecontrols[i];
                var label = dicttypecontrol[check];
                var counter=0;
                for (j=0;j<listlphsidsselect.length;j++){
                    if (listlphsidsselect[j].LHDT_TypeControle==check ) {

                        counter= counter+1}

                }
                var typeperc = ((counter/listlphsidsselect.length)*100).toFixed(2);
                counttypecontrol.push(typeperc);
                labelsoftypecontrols.push(label);
                //code to make table dynamically




                var row = tablescantype.insertRow(i+1);
                var cell1 = row.insertCell(0);
                var cell2 = row.insertCell(1);
                var cell3 = row.insertCell(2);
                cell1.innerHTML = label;
                cell2.innerHTML = counter;
                cell3.innerHTML = typeperc;



            };

            var rowtotal = tablescantype.insertRow(typecontrols.length+1);
            var celltotal1 = rowtotal.insertCell(0);
            var celltotal2= rowtotal.insertCell(1);
            var celltotal3=rowtotal.insertCell(2);
       
            celltotal1.innerHTML="Totaal";
            celltotal2.innerHTML= listlphsidsselect.length; 
            celltotal3.innerHTML="100%";





            //code to make piechart control type dynamically
            var canvas = document.getElementById("piechartcanvascontrol")
            var ctx = canvas.getContext("2d");


            var mypieChart = new Chart (ctx, {
                type : 'pie',
                data : {
                    labels :labelsoftypecontrols,
                    datasets : [{
                        backgroundColor: [
                        "#2ecc71",
                        "#3498db",
                        "#95a5a6",
                        "#9b59b6",
                        "#f1c40f",
                        "#e74c3c",
                        "#34495e"
                        ],
                        label : "percentage",
                        data : counttypecontrol
                    }]
                },options : { responsive :true,maintainAspectRatio : false,
                    title : {display : true, text : "ratio type control  ",padding : 2},legend :{labels :{ boxWidth: 20}},
                    tooltips :{ callbacks: {
                        label: function(tooltipItem, data) {
                            var allData = data.datasets[tooltipItem.datasetIndex].data;
                            var tooltipLabel = data.labels[tooltipItem.index];
                            var tooltipData = allData[tooltipItem.index];

                            return tooltipLabel + ': ' + tooltipData +  '%';
                        }
                    }}


                }}) ;

            //code to make piechart hits and table hits dynamically by dateselector
            var dicttypehits = {
                0 :'ongewerkte hit',1 :'geannuleerde hit', 2: 'gevalideerde hit', 4: 'Duplicate hit'

            };


       
            var counttypehit =[];
            var labelsoftypehit =[];

            for (i=0;i<hittypes.length;i++) {

                var checkhit = hittypes[i];
                console.log(checkhit);
                var labelhit = dicttypehits[checkhit];
                var counterhit=0;
                for (j=0;j<hitselect.length;j++){
                    if (hitselect[j].typehit==checkhit ) {

                        counterhit= counterhit+1}

                }
                console.log(counterhit);
                var hittypeperc = ((counterhit/hitselect.length)*100).toFixed(2);
                counttypehit.push(hittypeperc);
                labelsoftypehit.push(labelhit);

                var rowhit = tablehittype.insertRow(i+1);
                var cella = rowhit.insertCell(0);
                var cellb = rowhit.insertCell(1);
                var cellc = rowhit.insertCell(2);
                cella.innerHTML = labelhit;
                cellb.innerHTML = counterhit;
                cellc.innerHTML = hittypeperc;


            };

            var rowtotalhit = tablehittype.insertRow(hittypes.length+1);
            var celltotalhit1 = rowtotalhit.insertCell(0);
            var celltotalhit2= rowtotalhit.insertCell(1);
            var celltotalhit3=rowtotalhit.insertCell(2);
       
            celltotalhit1.innerHTML="Totaal";
            celltotalhit2.innerHTML= hitselect.length; 
            celltotalhit3.innerHTML="100%";

            var canvas = document.getElementById("piechartcanvashits")
            var ctx = canvas.getContext("2d");


            var mypieChart = new Chart (ctx, {
                type : 'pie',
                data : {
                    labels :labelsoftypehit,
                    datasets : [{
                        backgroundColor: [
                        "#2ecc71",
                        "#3498db",
                        "#95a5a6",
                        "#9b59b6",
                        "#f1c40f",
                        "#e74c3c",
                        "#34495e"
                        ],
                        label : "percentage",
                        data : counttypehit
                    }]
                },options : { responsive :true,maintainAspectRatio : false,
                    title : {display : true, text :" ratio type hits",padding : 2},legend :{labels :{ boxWidth: 20}},
                    tooltips :{ callbacks: {
                        label: function(tooltipItem, data) {
                            var allData = data.datasets[tooltipItem.datasetIndex].data;
                            var tooltipLabel = data.labels[tooltipItem.index];
                            var tooltipData = allData[tooltipItem.index];

                            return tooltipLabel + ': ' + tooltipData +  '%';
                        }
                    }}


                }}) ;








        });










       





    </script>
</body>
</html>

    
